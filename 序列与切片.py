# (序列)的切片 序列是指：内容连续 有序, 可以使用下标索引的一类数据容器 (列表 元组 字符串, 均可以视为序列)
# 序列的常用操作 -- 切片 (从一个序列中, 取出一个子序列) (列表 元组 字符串, 均支持切片操作)
"""
# 语法：序列[起始下标:结束下标:步长]
# 起始下标表示从何处开始, 可以留空, 留空视作从头开始
# 结束下标(不含)表示何处结束, 可以留空, 留空视作截取到结尾
# 步长表示, 依次取出元素的间隔, 留空表示 1
  步长 1 表示, 一个个取出元素
  步长 2 表示, 每次跳过 1 个元素取出
  步长 n 表示, 每次跳过 n-1 个元素取出
  步长为负数表示, 反向取出(注意, 起始下标和结束下标也要反向标记)
"""


# 对list进行切片, 从1开始, 4结束, 步长1
list1= [1, 2, 3, 4, 5, 6, 7]
new_list1 = list1[1:5] # 也可以为list[1:4:1]
print(new_list1)

# 对tuple进行切片, 从头开始, 到最后结束, 步长1
tuple1 = (1, 2, 3, 4, 5, 6, 7)
new_tuple1 = tuple1[:] #也可以为[0:7:1]
print(new_tuple1)

# 对str进行切片, 从头开始, 到最后结束, 步长2
str1 = 'hello world'
new_str1 = str1[::2] #也可以为[0:11:2]
print(new_str1)

# 对列表进行切片, 从3开始, 到1结束, 步长-1
list2 = [0, 1, 2, 3, 4, 5]
new_list3 = list2[-3:-6:-1]
print(new_list3)

# 对元组进行切片, 从头开始, 到最后结束, 步长-2
tuple2 = (1, 2, 3, 4, 5, 6, 7)
new_tuple3 = tuple2[::-2] #也可以为[-1:-8:-2]
print(new_tuple3)

# 对字符串进行切片, 从头开始, 到最后结束, 步长-1
str2 = 'hello world'
new_str3 = str2[::-1] #也可以为[-1:-12:-1]
print(new_str3)